{
    "loc": {
        "files": ["01-deutch-jotza", "02-vazirani", "03-simon", "04-grover"],
        "directories": [
            "hosted/cirq", 
            "hosted/qapl", 
            "hosted/qiskit", 
            "hosted/qrisp",
            "standalone/qmod",
            "standalone/q#", 
            "standalone/qasm",
            "classic"
        ],
        "comment_symbols": {
        ".py": "#",
        ".qs": "//",
        ".qmod": "//",
        ".ipynb": "#",
        ".q": "//",
        ".qml": "//",
        ".aplf": "⍝",
        ".qasm": "//",
        ".qpl": "//"
        },
        "output": "evaluation/results/loc.csv"
    },
    "cc": {
        "files": [ "01-deutch-jotza","02-vazirani", "03-simon", "04-grover"],
        "directories": [
        "hosted/cirq",
         "hosted/qiskit",
         "hosted/qrisp"
        ],
        "comment_symbols": {
        ".py": "#"
        },
        "output": "evaluation/results/cyclomatic_complexity.csv",
         "constructs": {
            "python": ["if", "elif", "for", "while", "except", "with", "assert", "list", "set", "dict", "and", "or"],           
            "qmod": ["if", "else", "repeat", "within", "apply", "lambda", "and", "or"],
            "q#": ["if", "elif", "for", "ApplyToEachA", "try", "catch", "repeat", "until"],
            "APL": ["→", "¨", "⍣", "⍬", ",", "⍤", "∧", "∨", "∪", "⋄", "⎕SIGNAL", "⎕TRAP", "⎕ASSERT"],
            "qasm": ["if", "else"] 
        }
    },

    "ccc": {
        "files": [ "01-deutch-jotza","02-vazirani", "03-simon", "04-grover"],
        "directories": [
            "hosted/cirq", 
            "hosted/qapl", 
            "hosted/qiskit", 
            "hosted/qrisp",
            "standalone/qmod",
            "standalone/q#", 
            "standalone/qasm",
            "classic"
        ],
        "comment_symbols": {
        ".py": "#",
        ".qs": "//",
        ".qmod": "//",
        ".ipynb": "#",
        ".q": "//",
        ".qml": "//",
        ".aplf": "⍝",
        ".qasm": "//",
        ".qpl": "//"
        },
        "output": "evaluation/results/cyclomatic_complexity_calculator.csv",
        "constructs": {
            "py": ["if", "elif", "for", "while", "except", "with", "assert", "list", "set", "dict", "and", "or"],           
            "qmod": ["if", "else", "repeat", "within", "apply", "lambda", "and", "or"],
            "qs": ["if", "elif", "for", "ApplyToEachA", "try", "catch", "repeat", "until"],
            "aplf": ["→","¨", "⍣", "⍬", ",", "⍤", "∧", "∨", "∪", "⋄", "⎕SIGNAL", "⎕TRAP", "⎕ASSERT"],
            "qasm": ["if", "else"] 
        }
    },
    "halstead": {
        "files": ["01-deutch-jotza", "02-vazirani", "03-simon", "04-grover"],
            "directories": [
            "hosted/cirq", 
            "hosted/qapl", 
            "hosted/qiskit", 
            "hosted/qrisp",
            "standalone/qmod", 
            "standalone/q#", 
            "standalone/qasm",
            "classic"
        ],
        "comment_symbols": {
        ".py": "#",
        ".qs": "//",
        ".qmod": "//",
        ".ipynb": "#",
        ".q": "//",
        ".qml": "//",
        ".aplf": "⍝",
        ".qasm": "//",
        ".qpl": "//"
        },        
        "output": "evaluation/results/halstead.csv",
        "operators": {
            "python": ["+", "-", "*", "/", "//", "%", "**",
                "==", "!=", ">", "<", ">=", "<=",
                "and", "or", "not",
                "=", "+=", "-=", "*=", "/=", "//=", "%=", "**=",
                "&", "|", "^", "~", "<<", ">>",
                "is", "is not",
                "in", "not in"],
            "qiskit": [  ],           
            "cirq":  [
                "def", "return", "for", "in", "append", "range", "cirq.LineQubit", 
                "cirq.Circuit", "cirq.X", "cirq.H", "cirq.measure", "cirq.CNOT", "=", "+", "*", ":", ",", "(", "[", ".","print"
            ],
            "qrisp": [  ],
            "quapl": [],
            "qmod": [],
            "q#": [
                "operation", "use", "let", "return", "for", "if", "else",   
                "Adj", "Ctl", "@EntryPoint()",                             
                "=", "..", "-", "+"
            ]     ,
            "qasm": [],
            "classic": []
        },
        "operands": {
            "qiskit": [],           
            "cirq": [],
            "qrisp": [],
            "quapl": [],
            "qmod": [],
            "q#": [],
            "qasm": [],
            "classic": []
        },
        "constraints_key": {
            "qiskit": [],           
            "cirq": ["import", "cirq"],
            "qrisp": [],
            "quapl": [],
            "qmod": [],
            "q#":["namespace", "open", "Microsoft", "Quantum", "Intrinsic", "Math", "Measurement", "Arrays", "Convert", "Diagnostics"],

            "qasm": [],
            "classic": []
        }
    }    
}
