:Namespace GROVER 
    phase ← {
        ⍝ ⍵: vector state
        ⍝ ⍺: list of lists with the elements to find, e.g., ((1 0 1) (1 0 0)) phase vs
        iter ← {
            x ← ⊃ 1↑⍺
            a ← 1↓⍺
            n_qubits ← (2⍟1⌷⍴⍵)
            qubits_index  ← (⍳n_qubits)-1
            apply ← {     
                (qubits_index vs ) ← (1⊃⍵) (2⊃⍵)
                stg_ctrl ← ((qubits_index) ({⍵=0:#.quapl.gates.X ⋄ ⍵=1:#.quapl.gates.I }¨ x ) )
                stg_ctrl #.quapl.circuit.stage vs
            }              
            res ← x apply (qubits_index ⍵)
            cz ← (n_qubits-1) #.quapl.gates.gCTR (#.quapl.gates.Z) 
            res  ← cz +.× res 
            res ← x apply   (qubits_index res)
            (⍴a)=0: res
            a ∇ res
        } 
        ⍺ iter ⍵
    }

:EndNamespace

_GROVER_ ← {
    ⍝ Grover algorithm
    ⍝ Takes a vector state in the 0 state (all qubits are in the 0 states).
    ⍝ Applies the algorithm with the passed oracle and returns the vector state without being measured.
    ⍝ ⍵: Initial vector state in the 0 state.
    ⍝ ⍺⍺: Oracle to be used in the Grover algorithm.
    X ← #.quapl.gates.X
    H ← #.quapl.gates.H
    I ← #.quapl.gates.I
    CNOT ← #.quapl.gates.CNOT
    SWAP ← #.quapl.gates.SWAP
    stage ← #.quapl.circuit.stage
    ⍝ phase ← #.quapl.oracles.Grover.phase
    vs ← 1⊃⍵
    search_elements ← 2⊃⍵
    n_qubits ← (2⍟1⌷⍴vs)
    num_iter ←   ⌊((○1÷4) × (2*n_qubits)*0.5)     
    qubits ← ⍳n_qubits
    qubits_index ← (⍳n_qubits)-1
    ⍝ Uniform superposition 
    stg_ctrl ← ((qubits_index) ({H}¨qubits))    
    mid_state ← stg_ctrl stage vs    
    
    ⍝ mid state qubits 
    grover_iter ← {
        0 = 3⊃⍵: 1⊃⍵
        mid_state ← 1⊃⍵
        qubits ← 2⊃⍵              
        qubits_index ← (qubits)-1   
        search_elements ← 4⊃⍵ 

        ⍝ Applying phase oracle to the vector state 
        mid_state ← search_elements ⍺⍺  mid_state        

        ⍝ Applying difusser to the vector state
        mid_state ← ((qubits_index) ({H}¨qubits))  stage  mid_state
        mid_state ← ((qubits_index) ({X}¨qubits)) stage mid_state
        mid_state ← ((qubits_index) (({I}¨( ¯1↓(qubits))) , ⊂H ) ) stage mid_state
        cx ← (n_qubits-1) #.quapl.gates.gCTR (#.quapl.gates.X) 
        mid_state  ← cx +.× mid_state
        mid_state ← ((qubits_index) (({I}¨( ¯1↓(qubits))) , ⊂H ) ) stage mid_state       
        mid_state ← ((qubits_index) ({X}¨qubits))  stage mid_state
        mid_state ← ((qubits_index) ({H}¨qubits)) stage mid_state        
        num_iter ← ((3⊃⍵) - 1)         
        ⍺⍺ grover_iter (mid_state qubits num_iter search_elements ) 
    }     
    ⍺⍺ grover_iter (mid_state qubits num_iter search_elements) 
}
